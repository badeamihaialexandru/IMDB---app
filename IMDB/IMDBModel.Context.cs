//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMDBEntities : DbContext
    {
        public IMDBEntities()
            : base("name=IMDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Genuri> Genuris { get; set; }
        public virtual DbSet<Premii> Premiis { get; set; }
        public virtual DbSet<Relatie_Actori_Premii> Relatie_Actori_Premii { get; set; }
        public virtual DbSet<Relatie_Filme_Premii> Relatie_Filme_Premii { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<WatchList> WatchLists { get; set; }
        public virtual DbSet<YourRating> YourRatings { get; set; }
        public virtual DbSet<AllActionMovy> AllActionMovies { get; set; }
        public virtual DbSet<AllComedyMovy> AllComedyMovies { get; set; }
        public virtual DbSet<AllDramaMovy> AllDramaMovies { get; set; }
        public virtual DbSet<AllAdventureMovy> AllAdventureMovies { get; set; }
        public virtual DbSet<AllAnimationMovy> AllAnimationMovies { get; set; }
        public virtual DbSet<AllBiographyMovy> AllBiographyMovies { get; set; }
        public virtual DbSet<AllCrimeMovy> AllCrimeMovies { get; set; }
        public virtual DbSet<AllDocumentaryMovy> AllDocumentaryMovies { get; set; }
        public virtual DbSet<AllFamilyMovy> AllFamilyMovies { get; set; }
        public virtual DbSet<AllFantasyMovy> AllFantasyMovies { get; set; }
        public virtual DbSet<AllFilmNoirMovy> AllFilmNoirMovies { get; set; }
        public virtual DbSet<AllHistoryMovy> AllHistoryMovies { get; set; }
        public virtual DbSet<AllHorrorMovy> AllHorrorMovies { get; set; }
        public virtual DbSet<AllMisteryMovy> AllMisteryMovies { get; set; }
        public virtual DbSet<AllMusicalMovy> AllMusicalMovies { get; set; }
        public virtual DbSet<AllMusicMovy> AllMusicMovies { get; set; }
        public virtual DbSet<AllRomanceMovy> AllRomanceMovies { get; set; }
        public virtual DbSet<AllSFMovy> AllSFMovies { get; set; }
        public virtual DbSet<AllSportMovy> AllSportMovies { get; set; }
        public virtual DbSet<AllThrillerMovy> AllThrillerMovies { get; set; }
        public virtual DbSet<AllWarMovy> AllWarMovies { get; set; }
        public virtual DbSet<AllWesternMovy> AllWesternMovies { get; set; }
        public virtual DbSet<Actori> Actoris { get; set; }
        public virtual DbSet<Relatie_actor_film> Relatie_actor_film { get; set; }
        public virtual DbSet<MostPopularMovy> MostPopularMovies { get; set; }
        public virtual DbSet<Filme> Filmes { get; set; }
        public virtual DbSet<Relatie_Actor_Serial> Relatie_Actor_Serial { get; set; }
        public virtual DbSet<Regizori> Regizoris { get; set; }
        public virtual DbSet<Seriale> Seriales { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int AddActorWithoutPhoto(string nume, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddActorWithoutPhoto", numeParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter);
        }
    
        public virtual int AddActorWithPhoto(string nume, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddActorWithPhoto", numeParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int UpdateActorWithPhoto(string numeVechi, string numeNou, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var numeVechiParameter = numeVechi != null ?
                new ObjectParameter("NumeVechi", numeVechi) :
                new ObjectParameter("NumeVechi", typeof(string));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateActorWithPhoto", numeVechiParameter, numeNouParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int UpdateActoriDupaID(Nullable<int> iD, string numeNou, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateActoriDupaID", iDParameter, numeNouParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int DeleteActorbyID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteActorbyID", idParameter);
        }
    
        public virtual int DeleteActorbyName(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteActorbyName", numeParameter);
        }
    
        public virtual int DeleteDirectorbyID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDirectorbyID", idParameter);
        }
    
        public virtual int DeleteDirectorbyName(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDirectorbyName", numeParameter);
        }
    
        public virtual int InsertDirectorWithPhoto(string nume, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDirectorWithPhoto", numeParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int UpdateDirectorbyID(Nullable<int> iD, string numeNou, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDirectorbyID", iDParameter, numeNouParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int UpdateDirectorbyName(string numeVechi, string numeNou, string prenume, Nullable<System.DateTime> datanastere, string orasNatal, string tara, string nationalitate, byte[] photo)
        {
            var numeVechiParameter = numeVechi != null ?
                new ObjectParameter("NumeVechi", numeVechi) :
                new ObjectParameter("NumeVechi", typeof(string));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var prenumeParameter = prenume != null ?
                new ObjectParameter("Prenume", prenume) :
                new ObjectParameter("Prenume", typeof(string));
    
            var datanastereParameter = datanastere.HasValue ?
                new ObjectParameter("datanastere", datanastere) :
                new ObjectParameter("datanastere", typeof(System.DateTime));
    
            var orasNatalParameter = orasNatal != null ?
                new ObjectParameter("orasNatal", orasNatal) :
                new ObjectParameter("orasNatal", typeof(string));
    
            var taraParameter = tara != null ?
                new ObjectParameter("tara", tara) :
                new ObjectParameter("tara", typeof(string));
    
            var nationalitateParameter = nationalitate != null ?
                new ObjectParameter("nationalitate", nationalitate) :
                new ObjectParameter("nationalitate", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDirectorbyName", numeVechiParameter, numeNouParameter, prenumeParameter, datanastereParameter, orasNatalParameter, taraParameter, nationalitateParameter, photoParameter);
        }
    
        public virtual int DeleteMoviesbyID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMoviesbyID", idParameter);
        }
    
        public virtual int DeleteMoviesByName(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMoviesByName", numeParameter);
        }
    
        public virtual int DeleteTVSeriesById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTVSeriesById", idParameter);
        }
    
        public virtual int DeleteTVSeriesByName(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTVSeriesByName", numeParameter);
        }
    
        public virtual int DeleteUserById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserById", idParameter);
        }
    
        public virtual int DeleteUserByName(string nume)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserByName", numeParameter);
        }
    
        public virtual int InsertMovies(string nume, Nullable<int> anAparitie, string nota, byte[] photo)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertMovies", numeParameter, anAparitieParameter, notaParameter, photoParameter);
        }
    
        public virtual int UpdateMoviesbyID(Nullable<int> id, string numeNou, Nullable<int> anAparitie, string nota, byte[] photo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMoviesbyID", idParameter, numeNouParameter, anAparitieParameter, notaParameter, photoParameter);
        }
    
        public virtual int UpdateMoviesbyName(string numevechi, string numeNou, Nullable<int> anAparitie, string nota, byte[] photo)
        {
            var numevechiParameter = numevechi != null ?
                new ObjectParameter("numevechi", numevechi) :
                new ObjectParameter("numevechi", typeof(string));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMoviesbyName", numevechiParameter, numeNouParameter, anAparitieParameter, notaParameter, photoParameter);
        }
    
        public virtual int InsertTVSeries(string nume, Nullable<int> anAparitie, Nullable<int> nrSezoane, Nullable<int> totalEpisoade, string nota, byte[] photo)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var nrSezoaneParameter = nrSezoane.HasValue ?
                new ObjectParameter("NrSezoane", nrSezoane) :
                new ObjectParameter("NrSezoane", typeof(int));
    
            var totalEpisoadeParameter = totalEpisoade.HasValue ?
                new ObjectParameter("TotalEpisoade", totalEpisoade) :
                new ObjectParameter("TotalEpisoade", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTVSeries", numeParameter, anAparitieParameter, nrSezoaneParameter, totalEpisoadeParameter, notaParameter, photoParameter);
        }
    
        public virtual int UpdateTVSeriesbyID(Nullable<int> iD, string numeNou, Nullable<int> anAparitie, Nullable<int> nrSezoane, Nullable<int> totalEpisoade, string nota, byte[] photo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var nrSezoaneParameter = nrSezoane.HasValue ?
                new ObjectParameter("NrSezoane", nrSezoane) :
                new ObjectParameter("NrSezoane", typeof(int));
    
            var totalEpisoadeParameter = totalEpisoade.HasValue ?
                new ObjectParameter("TotalEpisoade", totalEpisoade) :
                new ObjectParameter("TotalEpisoade", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTVSeriesbyID", iDParameter, numeNouParameter, anAparitieParameter, nrSezoaneParameter, totalEpisoadeParameter, notaParameter, photoParameter);
        }
    
        public virtual int UpdateTVSeriesbyName(string numeVechi, string numeNou, Nullable<int> anAparitie, Nullable<int> nrSezoane, Nullable<int> totalEpisoade, string nota, byte[] photo)
        {
            var numeVechiParameter = numeVechi != null ?
                new ObjectParameter("NumeVechi", numeVechi) :
                new ObjectParameter("NumeVechi", typeof(string));
    
            var numeNouParameter = numeNou != null ?
                new ObjectParameter("NumeNou", numeNou) :
                new ObjectParameter("NumeNou", typeof(string));
    
            var anAparitieParameter = anAparitie.HasValue ?
                new ObjectParameter("AnAparitie", anAparitie) :
                new ObjectParameter("AnAparitie", typeof(int));
    
            var nrSezoaneParameter = nrSezoane.HasValue ?
                new ObjectParameter("NrSezoane", nrSezoane) :
                new ObjectParameter("NrSezoane", typeof(int));
    
            var totalEpisoadeParameter = totalEpisoade.HasValue ?
                new ObjectParameter("TotalEpisoade", totalEpisoade) :
                new ObjectParameter("TotalEpisoade", typeof(int));
    
            var notaParameter = nota != null ?
                new ObjectParameter("nota", nota) :
                new ObjectParameter("nota", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTVSeriesbyName", numeVechiParameter, numeNouParameter, anAparitieParameter, nrSezoaneParameter, totalEpisoadeParameter, notaParameter, photoParameter);
        }
    
        public virtual int InsertUser(string nume, string parola, string email, string nrTelefon, string drepturi, Nullable<System.DateTime> dataInregistrarii, byte[] photo)
        {
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var parolaParameter = parola != null ?
                new ObjectParameter("Parola", parola) :
                new ObjectParameter("Parola", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nrTelefonParameter = nrTelefon != null ?
                new ObjectParameter("NrTelefon", nrTelefon) :
                new ObjectParameter("NrTelefon", typeof(string));
    
            var drepturiParameter = drepturi != null ?
                new ObjectParameter("drepturi", drepturi) :
                new ObjectParameter("drepturi", typeof(string));
    
            var dataInregistrariiParameter = dataInregistrarii.HasValue ?
                new ObjectParameter("dataInregistrarii", dataInregistrarii) :
                new ObjectParameter("dataInregistrarii", typeof(System.DateTime));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUser", numeParameter, parolaParameter, emailParameter, nrTelefonParameter, drepturiParameter, dataInregistrariiParameter, photoParameter);
        }
    
        public virtual int UpdateUserbyID(Nullable<int> iD, string nume, string parola, string email, string nrTelefon, string drepturi, byte[] photo)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var parolaParameter = parola != null ?
                new ObjectParameter("Parola", parola) :
                new ObjectParameter("Parola", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nrTelefonParameter = nrTelefon != null ?
                new ObjectParameter("NrTelefon", nrTelefon) :
                new ObjectParameter("NrTelefon", typeof(string));
    
            var drepturiParameter = drepturi != null ?
                new ObjectParameter("drepturi", drepturi) :
                new ObjectParameter("drepturi", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserbyID", iDParameter, numeParameter, parolaParameter, emailParameter, nrTelefonParameter, drepturiParameter, photoParameter);
        }
    
        public virtual int UpdateUserbyName(string numeVechi, string nume, string parola, string email, string nrTelefon, string drepturi, byte[] photo)
        {
            var numeVechiParameter = numeVechi != null ?
                new ObjectParameter("NumeVechi", numeVechi) :
                new ObjectParameter("NumeVechi", typeof(string));
    
            var numeParameter = nume != null ?
                new ObjectParameter("Nume", nume) :
                new ObjectParameter("Nume", typeof(string));
    
            var parolaParameter = parola != null ?
                new ObjectParameter("Parola", parola) :
                new ObjectParameter("Parola", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nrTelefonParameter = nrTelefon != null ?
                new ObjectParameter("NrTelefon", nrTelefon) :
                new ObjectParameter("NrTelefon", typeof(string));
    
            var drepturiParameter = drepturi != null ?
                new ObjectParameter("drepturi", drepturi) :
                new ObjectParameter("drepturi", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("photo", photo) :
                new ObjectParameter("photo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserbyName", numeVechiParameter, numeParameter, parolaParameter, emailParameter, nrTelefonParameter, drepturiParameter, photoParameter);
        }
    }
}
